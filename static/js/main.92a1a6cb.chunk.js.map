{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","visiblePages","Math","ceil","className","cn","disabled","href","onClick","map","x","role","active","Number","onKeyDown","length","items","App","useState","setCurrentPage","setPerPage","startPoint","endPoint","value","end","getEnd","onChange","event","target","htmlFor","page","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aASA,IAAMC,EALiBX,EAAW,EADnBY,KAAKC,KAAKN,EAAQC,IAQjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,WACa,IAAhBT,GACFC,EAAaD,EAAc,IAPjC,oBAcDE,EAAaQ,KAAI,SAAAC,GAAC,OACjB,oBAEEC,KAAK,eACLP,UAAWC,IAAG,YAAa,CACzBO,OAAQb,IAAgBc,OAAOH,KAEjCF,QAAS,kBAAMR,EAAcU,IAC7BI,UAAW,kBAAMd,EAAaa,OAAOH,KAPvC,SASE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GAHZ,SAKGA,KAbEA,MAkBT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUP,IAAgBE,EAAac,SAF3C,SAKE,mBACE,UAAQ,WACRX,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAac,OAC5CP,QAAS,WACHT,IAAgBE,EAAac,QAC/Bf,EAAaD,EAAc,IAPjC,wBClEKiB,EAAQ1B,EAAW,EAAG,IAChCmB,KAAI,SAAAf,GAAC,qBAAYA,MAIPuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACMC,EAAatB,EAAcD,EAAUA,EACrCwB,EAAWvB,EAAcD,EAa/B,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCsB,EAAa,EAD9C,cAdJ,SAAgBE,GACd,IAAIC,EAAMD,EAMV,OAJIA,EAZM,KAaRC,EAbQ,IAgBHA,EAQgDC,CAAOH,GAD5D,eAvBQ,GAuBR,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRA,UAAU,eACVmB,MAAOzB,EACP4B,SAAU,SAACC,GACTP,EAAWP,OAAOc,EAAMC,OAAOL,QAC/BJ,EAAe,IANnB,SAtBQ,CAAC,EAAG,EAAG,GAAI,IA+BRV,KAAI,SAAAC,GAAC,OACZ,iCAGGA,GAFIA,UAQb,uBAAOmB,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAtDM,GAuDNC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAC8B,GACbX,EAAeW,MAInB,6BACGd,EAAMe,MAAMV,EAAYC,GAAUb,KAAI,SAAAC,GAAC,OACtC,oBAAY,UAAQ,OAApB,SAA4BA,GAAnBA,YCtEnBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.92a1a6cb.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  function getPreparePages() {\n    const stop = Math.ceil(total / perPage);\n    const preparePages = getNumbers(1, stop);\n\n    return preparePages;\n  }\n\n  const visiblePages = getPreparePages();\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {visiblePages.map(x => (\n        <li\n          key={x}\n          role=\"presentation\"\n          className={cn('page-item', {\n            active: currentPage === Number(x),\n          })}\n          onClick={() => onPageChange((x))}\n          onKeyDown={() => onPageChange(Number(x))}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${x}`}\n          >\n            {x}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === visiblePages.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === visiblePages.length}\n          onClick={() => {\n            if (currentPage !== visiblePages.length) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const startPoint = currentPage * perPage - perPage;\n  const endPoint = currentPage * perPage;\n  const options = [3, 5, 10, 20];\n\n  function getEnd(value: number) {\n    let end = value;\n\n    if (value > total) {\n      end = total;\n    }\n\n    return end;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPoint + 1} - ${getEnd(endPoint)} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            {options.map(x => (\n              <option\n                key={x}\n              >\n                {x}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {items.slice(startPoint, endPoint).map(x => (\n          <li key={x} data-cy=\"item\">{x}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}